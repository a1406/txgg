/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_db_5frole_5finfo_2eproto__INCLUDED
#define PROTOBUF_C_db_5frole_5finfo_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _DbThing DbThing;
typedef struct _DbBag DbBag;
typedef struct _DbQuestProgress DbQuestProgress;
typedef struct _DbQuestProgressList DbQuestProgressList;
typedef struct _DbOneRole DbOneRole;
typedef struct _DbShortcut DbShortcut;
typedef struct _DbFriend DbFriend;
typedef struct _DbBlobRoleInfo DbBlobRoleInfo;


/* --- enums --- */


/* --- messages --- */

struct  _DbThing
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t num;
  uint32_t pos;
};
#define DB_THING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_thing__descriptor) \
    , 0, 0, 0 }


struct  _DbBag
{
  ProtobufCMessage base;
  uint32_t max_num;
  size_t n_things;
  DbThing **things;
};
#define DB_BAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_bag__descriptor) \
    , 0, 0,NULL }


struct  _DbQuestProgress
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t state;
  uint32_t accept_time;
  uint32_t cycle_num;
  uint32_t kill_npc1_num;
  uint32_t kill_npc2_num;
  uint32_t kill_npc3_num;
  uint32_t collect_item1_num;
  uint32_t collect_item2_num;
  uint32_t collect_item3_num;
};
#define DB_QUEST_PROGRESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_quest_progress__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _DbQuestProgressList
{
  ProtobufCMessage base;
  size_t n_quest;
  DbQuestProgress **quest;
  uint32_t main_quest_index;
  size_t n_all_finished_slave_quest;
  uint32_t *all_finished_slave_quest;
};
#define DB_QUEST_PROGRESS_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_quest_progress_list__descriptor) \
    , 0,NULL, 0, 0,NULL }


struct  _DbOneRole
{
  ProtobufCMessage base;
  char *name;
  uint32_t level;
  uint32_t prof;
  uint32_t exp;
  size_t n_equip;
  uint32_t *equip;
  size_t n_skill;
  uint32_t *skill;
  size_t n_active_skill;
  uint32_t *active_skill;
};
#define DB_ONE_ROLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_one_role__descriptor) \
    , NULL, 0, 0, 0, 0,NULL, 0,NULL, 0,NULL }


struct  _DbShortcut
{
  ProtobufCMessage base;
  uint32_t id;
  int32_t pos;
};
#define DB_SHORTCUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_shortcut__descriptor) \
    , 0, 0 }


struct  _DbFriend
{
  ProtobufCMessage base;
  size_t n_friend_;
  uint64_t *friend_;
  size_t n_blacklist;
  uint64_t *blacklist;
};
#define DB_FRIEND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_friend__descriptor) \
    , 0,NULL, 0,NULL }


struct  _DbBlobRoleInfo
{
  ProtobufCMessage base;
  DbBag *bag;
  DbQuestProgressList *quest;
  size_t n_one_role;
  DbOneRole **one_role;
  size_t n_shortcut;
  DbShortcut **shortcut;
  DbFriend *game_friend;
};
#define DB_BLOB_ROLE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_blob_role_info__descriptor) \
    , NULL, NULL, 0,NULL, 0,NULL, NULL }


/* DbThing methods */
void   db_thing__init
                     (DbThing         *message);
size_t db_thing__get_packed_size
                     (const DbThing   *message);
size_t db_thing__pack
                     (const DbThing   *message,
                      uint8_t             *out);
size_t db_thing__pack_to_buffer
                     (const DbThing   *message,
                      ProtobufCBuffer     *buffer);
DbThing *
       db_thing__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_thing__free_unpacked
                     (DbThing *message,
                      ProtobufCAllocator *allocator);
/* DbBag methods */
void   db_bag__init
                     (DbBag         *message);
size_t db_bag__get_packed_size
                     (const DbBag   *message);
size_t db_bag__pack
                     (const DbBag   *message,
                      uint8_t             *out);
size_t db_bag__pack_to_buffer
                     (const DbBag   *message,
                      ProtobufCBuffer     *buffer);
DbBag *
       db_bag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_bag__free_unpacked
                     (DbBag *message,
                      ProtobufCAllocator *allocator);
/* DbQuestProgress methods */
void   db_quest_progress__init
                     (DbQuestProgress         *message);
size_t db_quest_progress__get_packed_size
                     (const DbQuestProgress   *message);
size_t db_quest_progress__pack
                     (const DbQuestProgress   *message,
                      uint8_t             *out);
size_t db_quest_progress__pack_to_buffer
                     (const DbQuestProgress   *message,
                      ProtobufCBuffer     *buffer);
DbQuestProgress *
       db_quest_progress__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_quest_progress__free_unpacked
                     (DbQuestProgress *message,
                      ProtobufCAllocator *allocator);
/* DbQuestProgressList methods */
void   db_quest_progress_list__init
                     (DbQuestProgressList         *message);
size_t db_quest_progress_list__get_packed_size
                     (const DbQuestProgressList   *message);
size_t db_quest_progress_list__pack
                     (const DbQuestProgressList   *message,
                      uint8_t             *out);
size_t db_quest_progress_list__pack_to_buffer
                     (const DbQuestProgressList   *message,
                      ProtobufCBuffer     *buffer);
DbQuestProgressList *
       db_quest_progress_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_quest_progress_list__free_unpacked
                     (DbQuestProgressList *message,
                      ProtobufCAllocator *allocator);
/* DbOneRole methods */
void   db_one_role__init
                     (DbOneRole         *message);
size_t db_one_role__get_packed_size
                     (const DbOneRole   *message);
size_t db_one_role__pack
                     (const DbOneRole   *message,
                      uint8_t             *out);
size_t db_one_role__pack_to_buffer
                     (const DbOneRole   *message,
                      ProtobufCBuffer     *buffer);
DbOneRole *
       db_one_role__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_one_role__free_unpacked
                     (DbOneRole *message,
                      ProtobufCAllocator *allocator);
/* DbShortcut methods */
void   db_shortcut__init
                     (DbShortcut         *message);
size_t db_shortcut__get_packed_size
                     (const DbShortcut   *message);
size_t db_shortcut__pack
                     (const DbShortcut   *message,
                      uint8_t             *out);
size_t db_shortcut__pack_to_buffer
                     (const DbShortcut   *message,
                      ProtobufCBuffer     *buffer);
DbShortcut *
       db_shortcut__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_shortcut__free_unpacked
                     (DbShortcut *message,
                      ProtobufCAllocator *allocator);
/* DbFriend methods */
void   db_friend__init
                     (DbFriend         *message);
size_t db_friend__get_packed_size
                     (const DbFriend   *message);
size_t db_friend__pack
                     (const DbFriend   *message,
                      uint8_t             *out);
size_t db_friend__pack_to_buffer
                     (const DbFriend   *message,
                      ProtobufCBuffer     *buffer);
DbFriend *
       db_friend__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_friend__free_unpacked
                     (DbFriend *message,
                      ProtobufCAllocator *allocator);
/* DbBlobRoleInfo methods */
void   db_blob_role_info__init
                     (DbBlobRoleInfo         *message);
size_t db_blob_role_info__get_packed_size
                     (const DbBlobRoleInfo   *message);
size_t db_blob_role_info__pack
                     (const DbBlobRoleInfo   *message,
                      uint8_t             *out);
size_t db_blob_role_info__pack_to_buffer
                     (const DbBlobRoleInfo   *message,
                      ProtobufCBuffer     *buffer);
DbBlobRoleInfo *
       db_blob_role_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_blob_role_info__free_unpacked
                     (DbBlobRoleInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DbThing_Closure)
                 (const DbThing *message,
                  void *closure_data);
typedef void (*DbBag_Closure)
                 (const DbBag *message,
                  void *closure_data);
typedef void (*DbQuestProgress_Closure)
                 (const DbQuestProgress *message,
                  void *closure_data);
typedef void (*DbQuestProgressList_Closure)
                 (const DbQuestProgressList *message,
                  void *closure_data);
typedef void (*DbOneRole_Closure)
                 (const DbOneRole *message,
                  void *closure_data);
typedef void (*DbShortcut_Closure)
                 (const DbShortcut *message,
                  void *closure_data);
typedef void (*DbFriend_Closure)
                 (const DbFriend *message,
                  void *closure_data);
typedef void (*DbBlobRoleInfo_Closure)
                 (const DbBlobRoleInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor db_thing__descriptor;
extern const ProtobufCMessageDescriptor db_bag__descriptor;
extern const ProtobufCMessageDescriptor db_quest_progress__descriptor;
extern const ProtobufCMessageDescriptor db_quest_progress_list__descriptor;
extern const ProtobufCMessageDescriptor db_one_role__descriptor;
extern const ProtobufCMessageDescriptor db_shortcut__descriptor;
extern const ProtobufCMessageDescriptor db_friend__descriptor;
extern const ProtobufCMessageDescriptor db_blob_role_info__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_db_5frole_5finfo_2eproto__INCLUDED */

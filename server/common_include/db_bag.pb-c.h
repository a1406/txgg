/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_db_5fbag_2eproto__INCLUDED
#define PROTOBUF_C_db_5fbag_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _DbThing DbThing;
typedef struct _DbBag DbBag;


/* --- enums --- */


/* --- messages --- */

struct  _DbThing
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t num;
  uint32_t pos;
};
#define DB_THING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_thing__descriptor) \
    , 0, 0, 0 }


struct  _DbBag
{
  ProtobufCMessage base;
  uint32_t max_num;
  size_t n_things;
  DbThing **things;
};
#define DB_BAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&db_bag__descriptor) \
    , 0, 0,NULL }


/* DbThing methods */
void   db_thing__init
                     (DbThing         *message);
size_t db_thing__get_packed_size
                     (const DbThing   *message);
size_t db_thing__pack
                     (const DbThing   *message,
                      uint8_t             *out);
size_t db_thing__pack_to_buffer
                     (const DbThing   *message,
                      ProtobufCBuffer     *buffer);
DbThing *
       db_thing__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_thing__free_unpacked
                     (DbThing *message,
                      ProtobufCAllocator *allocator);
/* DbBag methods */
void   db_bag__init
                     (DbBag         *message);
size_t db_bag__get_packed_size
                     (const DbBag   *message);
size_t db_bag__pack
                     (const DbBag   *message,
                      uint8_t             *out);
size_t db_bag__pack_to_buffer
                     (const DbBag   *message,
                      ProtobufCBuffer     *buffer);
DbBag *
       db_bag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   db_bag__free_unpacked
                     (DbBag *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DbThing_Closure)
                 (const DbThing *message,
                  void *closure_data);
typedef void (*DbBag_Closure)
                 (const DbBag *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor db_thing__descriptor;
extern const ProtobufCMessageDescriptor db_bag__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_db_5fbag_2eproto__INCLUDED */

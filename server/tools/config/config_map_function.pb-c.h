/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fmap_5ffunction_2eproto__INCLUDED
#define PROTOBUF_C_config_5fmap_5ffunction_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CFGMAPFUNCTION CFGMAPFUNCTION;
typedef struct _CFGMAPFUNCTIONS CFGMAPFUNCTIONS;


/* --- enums --- */


/* --- messages --- */

struct  _CFGMAPFUNCTION
{
  ProtobufCMessage base;
  int32_t id;
  int32_t monster1;
  int32_t monster2;
  int32_t monster3;
  int32_t hp;
  int32_t move;
  size_t n_drop;
  int32_t *drop;
  int32_t bless;
  int32_t bless_percent;
  int32_t curse;
  int32_t curse_percent;
  int32_t shop;
  int32_t shop_percent;
  int32_t gold;
  int32_t gold_percent;
  int32_t elite;
  int32_t elite_percent;
  int32_t drop_delta;
  int32_t drop_delta_percent;
  int32_t money_delta;
  int32_t money_delta_percent;
  int32_t exp_delta;
  int32_t exp_delta_percent;
};
#define CFG__MAP__FUNCTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__map__function__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _CFGMAPFUNCTIONS
{
  ProtobufCMessage base;
  size_t n_map_function;
  CFGMAPFUNCTION **map_function;
};
#define CFG__MAP__FUNCTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__map__functions__descriptor) \
    , 0,NULL }


/* CFGMAPFUNCTION methods */
void   cfg__map__function__init
                     (CFGMAPFUNCTION         *message);
size_t cfg__map__function__get_packed_size
                     (const CFGMAPFUNCTION   *message);
size_t cfg__map__function__pack
                     (const CFGMAPFUNCTION   *message,
                      uint8_t             *out);
size_t cfg__map__function__pack_to_buffer
                     (const CFGMAPFUNCTION   *message,
                      ProtobufCBuffer     *buffer);
CFGMAPFUNCTION *
       cfg__map__function__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__map__function__free_unpacked
                     (CFGMAPFUNCTION *message,
                      ProtobufCAllocator *allocator);
/* CFGMAPFUNCTIONS methods */
void   cfg__map__functions__init
                     (CFGMAPFUNCTIONS         *message);
size_t cfg__map__functions__get_packed_size
                     (const CFGMAPFUNCTIONS   *message);
size_t cfg__map__functions__pack
                     (const CFGMAPFUNCTIONS   *message,
                      uint8_t             *out);
size_t cfg__map__functions__pack_to_buffer
                     (const CFGMAPFUNCTIONS   *message,
                      ProtobufCBuffer     *buffer);
CFGMAPFUNCTIONS *
       cfg__map__functions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__map__functions__free_unpacked
                     (CFGMAPFUNCTIONS *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CFGMAPFUNCTION_Closure)
                 (const CFGMAPFUNCTION *message,
                  void *closure_data);
typedef void (*CFGMAPFUNCTIONS_Closure)
                 (const CFGMAPFUNCTIONS *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cfg__map__function__descriptor;
extern const ProtobufCMessageDescriptor cfg__map__functions__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fmap_5ffunction_2eproto__INCLUDED */

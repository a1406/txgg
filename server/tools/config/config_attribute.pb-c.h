/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fattribute_2eproto__INCLUDED
#define PROTOBUF_C_config_5fattribute_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CFGATTRIBUTE CFGATTRIBUTE;
typedef struct _CFGATTRIBUTES CFGATTRIBUTES;


/* --- enums --- */


/* --- messages --- */

struct  _CFGATTRIBUTE
{
  ProtobufCMessage base;
  int32_t id;
  int32_t hp;
  int32_t hp_percent;
  int32_t strength;
  int32_t brain;
  int32_t charm;
  int32_t agile;
  int32_t phy_attack;
  int32_t phy_attack_percent;
  int32_t magic_attack;
  int32_t magic_attack_percent;
  int32_t phy_defence;
  int32_t phy_defence_percent;
  int32_t magic_defence;
  int32_t magic_defence_percent;
  int32_t hit_rate;
  int32_t hit_rate_percent;
  int32_t jink_rate;
  int32_t jink_rate_percent;
  int32_t parry_rate;
  int32_t parry_rate_percent;
  int32_t countattack_rate;
  int32_t countattack_rate_percent;
  int32_t crit_rate;
  int32_t crit_rate_percent;
  int32_t speed;
  int32_t speed_percent;
  int32_t move_speed;
  int32_t move_speed_percent;
  int32_t fight_hit_percent;
  int32_t fight_parry_percent;
  int32_t fight_countattack_percent;
  int32_t fight_crit_percent;
  int32_t restore_hp;
  int32_t restore_hp_percent;
  int32_t restore_magic;
  int32_t restore_magic_percent;
};
#define CFG__ATTRIBUTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__attribute__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _CFGATTRIBUTES
{
  ProtobufCMessage base;
  size_t n_attribute;
  CFGATTRIBUTE **attribute;
};
#define CFG__ATTRIBUTES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__attributes__descriptor) \
    , 0,NULL }


/* CFGATTRIBUTE methods */
void   cfg__attribute__init
                     (CFGATTRIBUTE         *message);
size_t cfg__attribute__get_packed_size
                     (const CFGATTRIBUTE   *message);
size_t cfg__attribute__pack
                     (const CFGATTRIBUTE   *message,
                      uint8_t             *out);
size_t cfg__attribute__pack_to_buffer
                     (const CFGATTRIBUTE   *message,
                      ProtobufCBuffer     *buffer);
CFGATTRIBUTE *
       cfg__attribute__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__attribute__free_unpacked
                     (CFGATTRIBUTE *message,
                      ProtobufCAllocator *allocator);
/* CFGATTRIBUTES methods */
void   cfg__attributes__init
                     (CFGATTRIBUTES         *message);
size_t cfg__attributes__get_packed_size
                     (const CFGATTRIBUTES   *message);
size_t cfg__attributes__pack
                     (const CFGATTRIBUTES   *message,
                      uint8_t             *out);
size_t cfg__attributes__pack_to_buffer
                     (const CFGATTRIBUTES   *message,
                      ProtobufCBuffer     *buffer);
CFGATTRIBUTES *
       cfg__attributes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__attributes__free_unpacked
                     (CFGATTRIBUTES *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CFGATTRIBUTE_Closure)
                 (const CFGATTRIBUTE *message,
                  void *closure_data);
typedef void (*CFGATTRIBUTES_Closure)
                 (const CFGATTRIBUTES *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cfg__attribute__descriptor;
extern const ProtobufCMessageDescriptor cfg__attributes__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fattribute_2eproto__INCLUDED */

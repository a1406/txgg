/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fNPC_2eproto__INCLUDED
#define PROTOBUF_C_config_5fNPC_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CFGNPC CFGNPC;
typedef struct _CFGNPCS CFGNPCS;


/* --- enums --- */


/* --- messages --- */

struct  _CFGNPC
{
  ProtobufCMessage base;
  uint32_t id;
  char *name;
  uint32_t level;
  uint32_t icon;
  uint32_t style;
  uint32_t type;
  size_t n_func;
  uint32_t *func;
  char *msg;
  char *music;
  uint32_t attr;
  uint32_t skill1;
  uint32_t skill2;
  uint32_t skill3;
  uint32_t ai;
  size_t n_drop;
  uint32_t *drop;
  uint32_t script;
};
#define CFG__NPC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__npc__descriptor) \
    , 0, NULL, 0, 0, 0, 0, 0,NULL, NULL, NULL, 0, 0, 0, 0, 0, 0,NULL, 0 }


struct  _CFGNPCS
{
  ProtobufCMessage base;
  size_t n_npc;
  CFGNPC **npc;
};
#define CFG__NPCS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__npcs__descriptor) \
    , 0,NULL }


/* CFGNPC methods */
void   cfg__npc__init
                     (CFGNPC         *message);
size_t cfg__npc__get_packed_size
                     (const CFGNPC   *message);
size_t cfg__npc__pack
                     (const CFGNPC   *message,
                      uint8_t             *out);
size_t cfg__npc__pack_to_buffer
                     (const CFGNPC   *message,
                      ProtobufCBuffer     *buffer);
CFGNPC *
       cfg__npc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__npc__free_unpacked
                     (CFGNPC *message,
                      ProtobufCAllocator *allocator);
/* CFGNPCS methods */
void   cfg__npcs__init
                     (CFGNPCS         *message);
size_t cfg__npcs__get_packed_size
                     (const CFGNPCS   *message);
size_t cfg__npcs__pack
                     (const CFGNPCS   *message,
                      uint8_t             *out);
size_t cfg__npcs__pack_to_buffer
                     (const CFGNPCS   *message,
                      ProtobufCBuffer     *buffer);
CFGNPCS *
       cfg__npcs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__npcs__free_unpacked
                     (CFGNPCS *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CFGNPC_Closure)
                 (const CFGNPC *message,
                  void *closure_data);
typedef void (*CFGNPCS_Closure)
                 (const CFGNPCS *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cfg__npc__descriptor;
extern const ProtobufCMessageDescriptor cfg__npcs__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fNPC_2eproto__INCLUDED */

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fmap_2eproto__INCLUDED
#define PROTOBUF_C_config_5fmap_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CFGMAP CFGMAP;
typedef struct _CFGMAPS CFGMAPS;


/* --- enums --- */


/* --- messages --- */

struct  _CFGMAP
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
  int32_t level;
  int32_t num;
  int32_t profession;
  int32_t open_time;
  int32_t allowed_alliance;
  int32_t scene_id;
  int32_t boss1;
  int32_t boss2;
  int32_t boss3;
  int32_t award;
  int32_t flash_id;
};
#define CFG__MAP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__map__descriptor) \
    , 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _CFGMAPS
{
  ProtobufCMessage base;
  size_t n_map;
  CFGMAP **map;
};
#define CFG__MAPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__maps__descriptor) \
    , 0,NULL }


/* CFGMAP methods */
void   cfg__map__init
                     (CFGMAP         *message);
size_t cfg__map__get_packed_size
                     (const CFGMAP   *message);
size_t cfg__map__pack
                     (const CFGMAP   *message,
                      uint8_t             *out);
size_t cfg__map__pack_to_buffer
                     (const CFGMAP   *message,
                      ProtobufCBuffer     *buffer);
CFGMAP *
       cfg__map__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__map__free_unpacked
                     (CFGMAP *message,
                      ProtobufCAllocator *allocator);
/* CFGMAPS methods */
void   cfg__maps__init
                     (CFGMAPS         *message);
size_t cfg__maps__get_packed_size
                     (const CFGMAPS   *message);
size_t cfg__maps__pack
                     (const CFGMAPS   *message,
                      uint8_t             *out);
size_t cfg__maps__pack_to_buffer
                     (const CFGMAPS   *message,
                      ProtobufCBuffer     *buffer);
CFGMAPS *
       cfg__maps__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__maps__free_unpacked
                     (CFGMAPS *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CFGMAP_Closure)
                 (const CFGMAP *message,
                  void *closure_data);
typedef void (*CFGMAPS_Closure)
                 (const CFGMAPS *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cfg__map__descriptor;
extern const ProtobufCMessageDescriptor cfg__maps__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fmap_2eproto__INCLUDED */

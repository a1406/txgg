/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_transport_2eproto__INCLUDED
#define PROTOBUF_C_transport_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _TRANSPORT TRANSPORT;
typedef struct _TRANSPORTS TRANSPORTS;


/* --- enums --- */


/* --- messages --- */

struct  _TRANSPORT
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
  int32_t src_scene_id;
  int32_t src_pos_x;
  int32_t src_pos_y;
  int32_t dst_scene_id;
  int32_t dst_pos_x;
  int32_t dst_pos_y;
};
#define TRANSPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&transport__descriptor) \
    , 0, NULL, 0, 0, 0, 0, 0, 0 }


struct  _TRANSPORTS
{
  ProtobufCMessage base;
  size_t n_transport;
  TRANSPORT **transport;
};
#define TRANSPORTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&transports__descriptor) \
    , 0,NULL }


/* TRANSPORT methods */
void   transport__init
                     (TRANSPORT         *message);
size_t transport__get_packed_size
                     (const TRANSPORT   *message);
size_t transport__pack
                     (const TRANSPORT   *message,
                      uint8_t             *out);
size_t transport__pack_to_buffer
                     (const TRANSPORT   *message,
                      ProtobufCBuffer     *buffer);
TRANSPORT *
       transport__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   transport__free_unpacked
                     (TRANSPORT *message,
                      ProtobufCAllocator *allocator);
/* TRANSPORTS methods */
void   transports__init
                     (TRANSPORTS         *message);
size_t transports__get_packed_size
                     (const TRANSPORTS   *message);
size_t transports__pack
                     (const TRANSPORTS   *message,
                      uint8_t             *out);
size_t transports__pack_to_buffer
                     (const TRANSPORTS   *message,
                      ProtobufCBuffer     *buffer);
TRANSPORTS *
       transports__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   transports__free_unpacked
                     (TRANSPORTS *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*TRANSPORT_Closure)
                 (const TRANSPORT *message,
                  void *closure_data);
typedef void (*TRANSPORTS_Closure)
                 (const TRANSPORTS *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor transport__descriptor;
extern const ProtobufCMessageDescriptor transports__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_transport_2eproto__INCLUDED */

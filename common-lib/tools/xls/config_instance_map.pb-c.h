/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5finstance_5fmap_2eproto__INCLUDED
#define PROTOBUF_C_config_5finstance_5fmap_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CFGINSTANCEMAPNODE CFGINSTANCEMAPNODE;
typedef struct _CFGINSTANCEMAP CFGINSTANCEMAP;


/* --- enums --- */

typedef enum _INSTANCEACTION {
  INSTANCE__ACTION__TYPE_NULL = 1,
  INSTANCE__ACTION__TYPE_START = 2,
  INSTANCE__ACTION__TYPE_END = 3,
  INSTANCE__ACTION__TYPE_FIGHT = 4,
  INSTANCE__ACTION__TYPE_TRAP = 5,
  INSTANCE__ACTION__TYPE_RAND = 6,
  INSTANCE__ACTION__TYPE_HEAL = 7,
  INSTANCE__ACTION__TYPE_STOP = 8,
  INSTANCE__ACTION__TYPE_FORWARD = 9,
  INSTANCE__ACTION__TYPE_BACKWARD = 10,
  INSTANCE__ACTION__TYPE_LUCK = 11,
  INSTANCE__ACTION__TYPE_QUEST = 12,
  INSTANCE__ACTION__TYPE_ELITE = 13,
  INSTANCE__ACTION__TYPE_MONEY = 14,
  INSTANCE__ACTION__TYPE_CONTAINER = 15,
  INSTANCE__ACTION__TYPE_TRANSPORT = 16
} INSTANCEACTION;

/* --- messages --- */

struct  _CFGINSTANCEMAPNODE
{
  ProtobufCMessage base;
  int32_t id;
  int32_t action;
  int32_t last_id;
  int32_t next_id1;
  int32_t next_id2;
  int32_t next_id3;
};
#define CFG__INSTANCE__MAP__NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__instance__map__node__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _CFGINSTANCEMAP
{
  ProtobufCMessage base;
  size_t n_node;
  CFGINSTANCEMAPNODE **node;
};
#define CFG__INSTANCE__MAP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__instance__map__descriptor) \
    , 0,NULL }


/* CFGINSTANCEMAPNODE methods */
void   cfg__instance__map__node__init
                     (CFGINSTANCEMAPNODE         *message);
size_t cfg__instance__map__node__get_packed_size
                     (const CFGINSTANCEMAPNODE   *message);
size_t cfg__instance__map__node__pack
                     (const CFGINSTANCEMAPNODE   *message,
                      uint8_t             *out);
size_t cfg__instance__map__node__pack_to_buffer
                     (const CFGINSTANCEMAPNODE   *message,
                      ProtobufCBuffer     *buffer);
CFGINSTANCEMAPNODE *
       cfg__instance__map__node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__instance__map__node__free_unpacked
                     (CFGINSTANCEMAPNODE *message,
                      ProtobufCAllocator *allocator);
/* CFGINSTANCEMAP methods */
void   cfg__instance__map__init
                     (CFGINSTANCEMAP         *message);
size_t cfg__instance__map__get_packed_size
                     (const CFGINSTANCEMAP   *message);
size_t cfg__instance__map__pack
                     (const CFGINSTANCEMAP   *message,
                      uint8_t             *out);
size_t cfg__instance__map__pack_to_buffer
                     (const CFGINSTANCEMAP   *message,
                      ProtobufCBuffer     *buffer);
CFGINSTANCEMAP *
       cfg__instance__map__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__instance__map__free_unpacked
                     (CFGINSTANCEMAP *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CFGINSTANCEMAPNODE_Closure)
                 (const CFGINSTANCEMAPNODE *message,
                  void *closure_data);
typedef void (*CFGINSTANCEMAP_Closure)
                 (const CFGINSTANCEMAP *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    instance__action__descriptor;
extern const ProtobufCMessageDescriptor cfg__instance__map__node__descriptor;
extern const ProtobufCMessageDescriptor cfg__instance__map__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5finstance_5fmap_2eproto__INCLUDED */

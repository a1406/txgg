/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fpinstance_2eproto__INCLUDED
#define PROTOBUF_C_config_5fpinstance_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _CONFIGPINSTANCE CONFIGPINSTANCE;
typedef struct _CONFIGPINSTANCES CONFIGPINSTANCES;


/* --- enums --- */


/* --- messages --- */

struct  _CONFIGPINSTANCE
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
  int32_t res_id;
  size_t n_dropthing_id;
  int32_t *dropthing_id;
};
#define CONFIG__PINSTANCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__pinstance__descriptor) \
    , 0, NULL, 0, 0,NULL }


struct  _CONFIGPINSTANCES
{
  ProtobufCMessage base;
  size_t n_pinstance;
  CONFIGPINSTANCE **pinstance;
};
#define CONFIG__PINSTANCES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__pinstances__descriptor) \
    , 0,NULL }


/* CONFIGPINSTANCE methods */
void   config__pinstance__init
                     (CONFIGPINSTANCE         *message);
size_t config__pinstance__get_packed_size
                     (const CONFIGPINSTANCE   *message);
size_t config__pinstance__pack
                     (const CONFIGPINSTANCE   *message,
                      uint8_t             *out);
size_t config__pinstance__pack_to_buffer
                     (const CONFIGPINSTANCE   *message,
                      ProtobufCBuffer     *buffer);
CONFIGPINSTANCE *
       config__pinstance__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__pinstance__free_unpacked
                     (CONFIGPINSTANCE *message,
                      ProtobufCAllocator *allocator);
/* CONFIGPINSTANCES methods */
void   config__pinstances__init
                     (CONFIGPINSTANCES         *message);
size_t config__pinstances__get_packed_size
                     (const CONFIGPINSTANCES   *message);
size_t config__pinstances__pack
                     (const CONFIGPINSTANCES   *message,
                      uint8_t             *out);
size_t config__pinstances__pack_to_buffer
                     (const CONFIGPINSTANCES   *message,
                      ProtobufCBuffer     *buffer);
CONFIGPINSTANCES *
       config__pinstances__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__pinstances__free_unpacked
                     (CONFIGPINSTANCES *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CONFIGPINSTANCE_Closure)
                 (const CONFIGPINSTANCE *message,
                  void *closure_data);
typedef void (*CONFIGPINSTANCES_Closure)
                 (const CONFIGPINSTANCES *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor config__pinstance__descriptor;
extern const ProtobufCMessageDescriptor config__pinstances__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fpinstance_2eproto__INCLUDED */

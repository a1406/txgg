/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_config_5fscene_2eproto__INCLUDED
#define PROTOBUF_C_config_5fscene_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _NpcInfo NpcInfo;
typedef struct _CFGSCENE CFGSCENE;
typedef struct _CFGSCENES CFGSCENES;


/* --- enums --- */


/* --- messages --- */

struct  _NpcInfo
{
  ProtobufCMessage base;
  int32_t id;
  int32_t pos_x;
  int32_t pos_y;
};
#define NPC_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&npc_info__descriptor) \
    , 0, 0, 0 }


struct  _CFGSCENE
{
  ProtobufCMessage base;
  int32_t id;
  char *name;
  int32_t width;
  int32_t height;
  int32_t valid_height;
  size_t n_npc_info;
  NpcInfo **npc_info;
  size_t n_instance_id;
  int32_t *instance_id;
};
#define CFG__SCENE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__scene__descriptor) \
    , 0, NULL, 0, 0, 0, 0,NULL, 0,NULL }


struct  _CFGSCENES
{
  ProtobufCMessage base;
  size_t n_scene;
  CFGSCENE **scene;
};
#define CFG__SCENES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cfg__scenes__descriptor) \
    , 0,NULL }


/* NpcInfo methods */
void   npc_info__init
                     (NpcInfo         *message);
size_t npc_info__get_packed_size
                     (const NpcInfo   *message);
size_t npc_info__pack
                     (const NpcInfo   *message,
                      uint8_t             *out);
size_t npc_info__pack_to_buffer
                     (const NpcInfo   *message,
                      ProtobufCBuffer     *buffer);
NpcInfo *
       npc_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   npc_info__free_unpacked
                     (NpcInfo *message,
                      ProtobufCAllocator *allocator);
/* CFGSCENE methods */
void   cfg__scene__init
                     (CFGSCENE         *message);
size_t cfg__scene__get_packed_size
                     (const CFGSCENE   *message);
size_t cfg__scene__pack
                     (const CFGSCENE   *message,
                      uint8_t             *out);
size_t cfg__scene__pack_to_buffer
                     (const CFGSCENE   *message,
                      ProtobufCBuffer     *buffer);
CFGSCENE *
       cfg__scene__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__scene__free_unpacked
                     (CFGSCENE *message,
                      ProtobufCAllocator *allocator);
/* CFGSCENES methods */
void   cfg__scenes__init
                     (CFGSCENES         *message);
size_t cfg__scenes__get_packed_size
                     (const CFGSCENES   *message);
size_t cfg__scenes__pack
                     (const CFGSCENES   *message,
                      uint8_t             *out);
size_t cfg__scenes__pack_to_buffer
                     (const CFGSCENES   *message,
                      ProtobufCBuffer     *buffer);
CFGSCENES *
       cfg__scenes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cfg__scenes__free_unpacked
                     (CFGSCENES *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*NpcInfo_Closure)
                 (const NpcInfo *message,
                  void *closure_data);
typedef void (*CFGSCENE_Closure)
                 (const CFGSCENE *message,
                  void *closure_data);
typedef void (*CFGSCENES_Closure)
                 (const CFGSCENES *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor npc_info__descriptor;
extern const ProtobufCMessageDescriptor cfg__scene__descriptor;
extern const ProtobufCMessageDescriptor cfg__scenes__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_config_5fscene_2eproto__INCLUDED */
